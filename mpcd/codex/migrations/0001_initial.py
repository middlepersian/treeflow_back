# Generated by Django 3.1.13 on 2021-08-25 09:17

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dict', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Codex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('head', models.SmallIntegerField()),
                ('dependency_relation', models.CharField(choices=[('acl', 'clausal modifier of noun (adnominal clause)'), ('advcl', 'adverbial clause modifier'), ('advmod', 'adverbial modifier'), ('amod', 'adjectival modifier'), ('appos', 'appositional modifier'), ('aux', 'auxiliary'), ('case', 'case marking'), ('cc', 'coordinating conjunction'), ('ccomp', 'clausal complement'), ('compound', 'compound'), ('conj', 'conjunct'), ('cop', 'copula'), ('det', 'determiner'), ('discourse', 'discourse element'), ('fixed', 'fixed multiword expression'), ('iobj', 'indirect object'), ('mark', 'marker'), ('nmod', 'nominal modifier'), ('nsubj', 'nominal subject'), ('nummod', 'numeric modifier'), ('obj', 'object'), ('obl', 'oblique nominal'), ('root', 'root')], max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Folio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                ('codex_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.codex')),
            ],
        ),
        migrations.CreateModel(
            name='MorphologicalAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('pos_tag', models.CharField(choices=[('ADJ', 'Adjective'), ('ADP', 'Adposition'), ('ADV', 'Adverb'), ('AUX', 'auxiliary'), ('CCONJ', 'Coordinating conjunction'), ('DET', 'Determiner'), ('INTJ', 'Interjection'), ('NOUN', 'Noun'), ('NUM', 'Numeral'), ('PART', 'Particle'), ('PRON', 'Pronoun'), ('PROPN', 'Proper noun'), ('PUNCT', 'Punctuation'), ('SCONJO', 'Subordinating conjunction'), ('SYM', 'Symbol'), ('VERB', 'Verb'), ('X', 'Other')], max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('chapter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Strophe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='SyntacticAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('dependency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codex.dependency')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('tkn', models.CharField(max_length=255)),
                ('trascription', models.TextField(blank=True)),
                ('transliteration', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True)),
                ('avestan', models.CharField(blank=True, max_length=255)),
                ('lemma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dict.entry')),
                ('morph_annotations', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='codex.morphologicalannotation')),
                ('syntax_annotations', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='codex.syntacticannotation')),
            ],
        ),
        migrations.CreateModel(
            name='TokenSemantics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('meaning', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Verse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('tokens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lyric_tokens', to='codex.token')),
                ('verse_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.strophe')),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_type', models.CharField(choices=[('P', 'Prose'), ('L', 'Lyric')], max_length=1)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('codex_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.codex')),
            ],
        ),
        migrations.AddField(
            model_name='strophe',
            name='text_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.text'),
        ),
        migrations.CreateModel(
            name='Side',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                ('folio_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.folio')),
            ],
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.section')),
                ('tokens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prose_tokens', to='codex.token')),
            ],
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                ('side_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.side')),
            ],
        ),
        migrations.AddField(
            model_name='chapter',
            name='text_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.text'),
        ),
        migrations.CreateModel(
            name='CodexToken',
            fields=[
                ('token_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='codex.token')),
                ('line_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codex.line')),
            ],
            bases=('codex.token',),
        ),
    ]
