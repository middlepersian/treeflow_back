# Generated by Django 3.1.13 on 2022-03-11 07:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('astr', 'astronomy'), ('bot', 'botany'), ('econom', 'economy'), ('geogr', 'geography'), ('legal', 'legal'), ('measure', 'measurement'), ('med', 'medicine'), ('myth', 'mythology'), ('philos', 'philosophy'), ('pol', 'politics'), ('purity', 'purity'), ('ritual', 'ritual'), ('theol', 'theology'), ('zool', 'zoology')], max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('definition', models.TextField(blank=True, null=True, unique=True)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
            ],
            options={
                'ordering': ['definition'],
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['lemma__word'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('category', models.CharField(choices=[('astr', 'astronomy'), ('bot', 'botany'), ('econom', 'economy'), ('geogr', 'geography'), ('legal', 'legal'), ('measure', 'measurement'), ('med', 'medicine'), ('myth', 'mythology'), ('philos', 'philosophy'), ('pol', 'politics'), ('purity', 'purity'), ('ritual', 'ritual'), ('theol', 'theology'), ('zool', 'zoology')], db_index=True, max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical category',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDefinition',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('definition', models.TextField(blank=True, db_index=True, null=True)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical definition',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDictionary',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical dictionary',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEntry',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical entry',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLemma',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('word', models.CharField(max_length=100)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical lemma',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLoanWord',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('word', models.CharField(db_index=True, max_length=50)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical loan word',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTranslation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('text', models.TextField(db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical translation',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Lemma',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=100)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
            ],
            options={
                'ordering': ['word'],
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(blank=True, max_length=350, null=True, unique=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['reference'],
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('text', models.TextField(unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='LoanWord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=50, unique=True)),
                ('language', models.CharField(blank=True, choices=[('akk', 'Akkadian'), ('arc', 'Imperial Aramaic (700-300 BCE), Official Aramaic (700-300 BCE)'), ('ave', 'Avestan'), ('eng', 'English'), ('deu', 'German'), ('fra', 'French'), ('grc', 'Ancient Greek (to 1453)'), ('ita', 'Italian'), ('pal', 'Pahlavi'), ('spa', 'Spanish'), ('xpr', 'Parthian')], max_length=3, null=True)),
                ('translations', models.ManyToManyField(blank=True, related_name='loanword_translations', to='dict.Translation')),
            ],
            options={
                'ordering': ['word'],
            },
        ),
        migrations.AddConstraint(
            model_name='lemma',
            constraint=models.UniqueConstraint(fields=('word', 'language'), name='word_language_lemma'),
        ),
        migrations.AddField(
            model_name='historicaltranslation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalloanword',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicallemma',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalentry',
            name='dict',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.dictionary'),
        ),
        migrations.AddField(
            model_name='historicalentry',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalentry',
            name='lemma',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.lemma'),
        ),
        migrations.AddField(
            model_name='historicaldictionary',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldefinition',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcategory',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entry',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='entry_categories', to='dict.Category'),
        ),
        migrations.AddField(
            model_name='entry',
            name='definitions',
            field=models.ManyToManyField(blank=True, related_name='entry_definitions', to='dict.Definition'),
        ),
        migrations.AddField(
            model_name='entry',
            name='dict',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry_dict', to='dict.dictionary'),
        ),
        migrations.AddField(
            model_name='entry',
            name='lemma',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entry_lemma', to='dict.lemma'),
        ),
        migrations.AddField(
            model_name='entry',
            name='loanwords',
            field=models.ManyToManyField(blank=True, related_name='entry_loanwords', to='dict.LoanWord'),
        ),
        migrations.AddField(
            model_name='entry',
            name='references',
            field=models.ManyToManyField(blank=True, related_name='entry_references', to='dict.Reference'),
        ),
        migrations.AddField(
            model_name='entry',
            name='related_entries',
            field=models.ManyToManyField(blank=True, related_name='_entry_related_entries_+', to='dict.Entry'),
        ),
        migrations.AddField(
            model_name='entry',
            name='translations',
            field=models.ManyToManyField(blank=True, related_name='entry_translations', to='dict.Translation'),
        ),
        migrations.AddConstraint(
            model_name='loanword',
            constraint=models.UniqueConstraint(fields=('word', 'language'), name='word_language_loanword'),
        ),
    ]
