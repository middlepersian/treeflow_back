# Generated by Django 4.1.4 on 2023-02-21 20:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source_languages', models.CharField(blank=True, max_length=3, null=True)),
                ('slug', models.SlugField(max_length=10, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lemma',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=100)),
                ('language', models.CharField(blank=True, max_length=3, null=True)),
                ('multiword_expression', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['word'],
            },
        ),
        migrations.CreateModel(
            name='TermTech',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('astr', 'astronomy'), ('bot', 'botany'), ('econom', 'economy'), ('geogr', 'geography'), ('legal', 'legal'), ('measure', 'measurement'), ('med', 'medicine'), ('myth', 'mythology'), ('philos', 'philosophy'), ('pol', 'politics'), ('purity', 'purity'), ('ritual', 'ritual'), ('theol', 'theology'), ('zool', 'zoology')], max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semantic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('related_semantics', models.ManyToManyField(blank=True, to='dict.semantic')),
            ],
        ),
        migrations.CreateModel(
            name='Meaning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meaning', models.TextField(blank=True, db_index=True, null=True)),
                ('language', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_meanings', models.ManyToManyField(blank=True, related_name='meaning_related_meanings', to='dict.meaning')),
            ],
            options={
                'ordering': ['meaning'],
            },
        ),
        migrations.CreateModel(
            name='LemmaRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(blank=True, max_length=50, null=True)),
                ('lemma1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_lemmas1', to='dict.lemma')),
                ('lemma2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_lemmas2', to='dict.lemma')),
            ],
        ),
        migrations.CreateModel(
            name='LemmaMeaning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lemma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_lemma', to='dict.lemma')),
                ('meaning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_meaning', to='dict.meaning')),
            ],
        ),
        migrations.AddField(
            model_name='lemma',
            name='related_lemmas',
            field=models.ManyToManyField(blank=True, related_name='lemma_related_lemmas', through='dict.LemmaRelation', to='dict.lemma'),
        ),
        migrations.AddField(
            model_name='lemma',
            name='related_meanings',
            field=models.ManyToManyField(blank=True, related_name='lemma_related_meanings', through='dict.LemmaMeaning', to='dict.meaning'),
        ),
        migrations.CreateModel(
            name='HistoricalTermTech',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('category', models.CharField(choices=[('astr', 'astronomy'), ('bot', 'botany'), ('econom', 'economy'), ('geogr', 'geography'), ('legal', 'legal'), ('measure', 'measurement'), ('med', 'medicine'), ('myth', 'mythology'), ('philos', 'philosophy'), ('pol', 'politics'), ('purity', 'purity'), ('ritual', 'ritual'), ('theol', 'theology'), ('zool', 'zoology')], db_index=True, max_length=10)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical term tech',
                'verbose_name_plural': 'historical term techs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSemantic',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical semantic',
                'verbose_name_plural': 'historical semantics',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMeaning',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('meaning', models.TextField(blank=True, db_index=True, null=True)),
                ('language', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical meaning',
                'verbose_name_plural': 'historical meanings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLemmaRelation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('relation_type', models.CharField(blank=True, max_length=50, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lemma1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.lemma')),
                ('lemma2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.lemma')),
            ],
            options={
                'verbose_name': 'historical lemma relation',
                'verbose_name_plural': 'historical lemma relations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLemmaMeaning',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lemma', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.lemma')),
                ('meaning', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.meaning')),
            ],
            options={
                'verbose_name': 'historical lemma meaning',
                'verbose_name_plural': 'historical lemma meanings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLemma',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('word', models.CharField(max_length=100)),
                ('language', models.CharField(blank=True, max_length=3, null=True)),
                ('multiword_expression', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical lemma',
                'verbose_name_plural': 'historical lemmas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDictionary',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('source_languages', models.CharField(blank=True, max_length=3, null=True)),
                ('slug', models.SlugField(max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical dictionary',
                'verbose_name_plural': 'historical dictionarys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name='dictionary',
            constraint=models.UniqueConstraint(fields=('name', 'slug'), name='dictionary_name_slug'),
        ),
        migrations.AddIndex(
            model_name='meaning',
            index=models.Index(fields=['meaning', 'language'], name='dict_meanin_meaning_01da8f_idx'),
        ),
        migrations.AddConstraint(
            model_name='meaning',
            constraint=models.UniqueConstraint(fields=('meaning', 'language'), name='meaning_language_meaning'),
        ),
        migrations.AddIndex(
            model_name='lemmarelation',
            index=models.Index(fields=['lemma1', 'lemma2'], name='dict_lemmar_lemma1__ca4285_idx'),
        ),
        migrations.AddConstraint(
            model_name='lemmarelation',
            constraint=models.UniqueConstraint(fields=('lemma1', 'lemma2'), name='lemma_relation'),
        ),
        migrations.AddIndex(
            model_name='lemmameaning',
            index=models.Index(fields=['lemma', 'meaning'], name='dict_lemmam_lemma_i_a920c1_idx'),
        ),
        migrations.AddConstraint(
            model_name='lemmameaning',
            constraint=models.UniqueConstraint(fields=('lemma', 'meaning'), name='lemma_meaning'),
        ),
        migrations.AddIndex(
            model_name='lemma',
            index=models.Index(fields=['word', 'language'], name='dict_lemma_word_ac16a5_idx'),
        ),
        migrations.AddConstraint(
            model_name='lemma',
            constraint=models.UniqueConstraint(fields=('word', 'language'), name='word_language_lemma'),
        ),
    ]
