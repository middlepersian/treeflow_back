# Generated by Django 4.1.4 on 2023-01-16 13:22

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dict', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BibEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodexPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uncertain', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
                ('to_discuss', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
                ('new_suggestion', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rel', models.CharField(max_length=9)),
                ('producer', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facsimile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Folio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=100)),
                ('number', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='MorphologicalAnnotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature', models.CharField(blank=True, max_length=10, null=True)),
                ('feature_value', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('project', models.TextField(blank=True, null=True)),
                ('reference', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.FloatField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=3)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='SectionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identifier', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('language', models.CharField(blank=True, max_length=3)),
                ('stage', models.CharField(blank=True, max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='TextSigle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sigle', models.CharField(max_length=10)),
                ('genre', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Codex',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='corpus.source')),
                ('sigle', models.CharField(max_length=5, unique=True)),
            ],
            bases=('corpus.source',),
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='corpus.source')),
            ],
            bases=('corpus.source',),
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.FloatField(blank=True, null=True)),
                ('root', models.BooleanField(default=False)),
                ('word_token', models.BooleanField(default=True)),
                ('visible', models.BooleanField(default=True)),
                ('language', models.CharField(blank=True, max_length=3, null=True)),
                ('transcription', models.CharField(max_length=50)),
                ('transliteration', models.CharField(blank=True, max_length=50)),
                ('pos', models.CharField(blank=True, max_length=8, null=True)),
                ('avestan', models.TextField(blank=True, null=True)),
                ('gloss', models.TextField(blank=True, null=True)),
                ('lemmas', models.ManyToManyField(blank=True, related_name='token_lemmas', to='dict.lemma')),
                ('meanings', models.ManyToManyField(blank=True, related_name='token_meanings', to='dict.meaning')),
                ('morphological_annotation', models.ManyToManyField(blank=True, related_name='token_morphological_annotation', to='corpus.morphologicalannotation')),
                ('previous', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='corpus.token')),
                ('syntactic_annotation', models.ManyToManyField(blank=True, related_name='token_syntactic_annotation', to='corpus.dependency')),
                ('text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='token_text', to='corpus.text')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalBibEntry',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('key', models.CharField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical bib entry',
                'verbose_name_plural': 'historical bib entrys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCodex',
            fields=[
                ('source_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='corpus.source')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('identifier', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sigle', models.CharField(db_index=True, max_length=5)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical codex',
                'verbose_name_plural': 'historical codexs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCodexPart',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical codex part',
                'verbose_name_plural': 'historical codex parts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalComment',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uncertain', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
                ('to_discuss', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
                ('new_suggestion', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1, null=True), blank=True, null=True, size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical comment',
                'verbose_name_plural': 'historical comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCorpus',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical corpus',
                'verbose_name_plural': 'historical corpuss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDependency',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('rel', models.CharField(max_length=9)),
                ('producer', models.SmallIntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical dependency',
                'verbose_name_plural': 'historical dependencys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEdition',
            fields=[
                ('source_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='corpus.source')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('identifier', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical edition',
                'verbose_name_plural': 'historical editions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFacsimile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical facsimile',
                'verbose_name_plural': 'historical facsimiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFolio',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('identifier', models.CharField(max_length=100)),
                ('number', models.FloatField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical folio',
                'verbose_name_plural': 'historical folios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMorphologicalAnnotation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('feature', models.CharField(blank=True, max_length=10, null=True)),
                ('feature_value', models.CharField(blank=True, max_length=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical morphological annotation',
                'verbose_name_plural': 'historical morphological annotations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSection',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('number', models.FloatField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical section',
                'verbose_name_plural': 'historical sections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSectionType',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('identifier', models.CharField(db_index=True, max_length=30)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical section type',
                'verbose_name_plural': 'historical section types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSource',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('identifier', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical source',
                'verbose_name_plural': 'historical sources',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalText',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('language', models.CharField(blank=True, max_length=3)),
                ('stage', models.CharField(blank=True, max_length=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical text',
                'verbose_name_plural': 'historical texts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalToken',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('number', models.FloatField(blank=True, null=True)),
                ('root', models.BooleanField(default=False)),
                ('word_token', models.BooleanField(default=True)),
                ('visible', models.BooleanField(default=True)),
                ('language', models.CharField(blank=True, max_length=3, null=True)),
                ('transcription', models.CharField(max_length=50)),
                ('transliteration', models.CharField(blank=True, max_length=50)),
                ('pos', models.CharField(blank=True, max_length=8, null=True)),
                ('avestan', models.TextField(blank=True, null=True)),
                ('gloss', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical token',
                'verbose_name_plural': 'historical tokens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name='textsigle',
            constraint=models.UniqueConstraint(fields=('sigle', 'genre'), name='sigle_genre'),
        ),
        migrations.AddField(
            model_name='text',
            name='collaborators',
            field=models.ManyToManyField(blank=True, related_name='text_collaborators', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='text',
            name='corpus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='text_corpus', to='corpus.corpus'),
        ),
        migrations.AddField(
            model_name='text',
            name='editors',
            field=models.ManyToManyField(blank=True, related_name='text_editors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='text',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='text_resources', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='text',
            name='sources',
            field=models.ManyToManyField(blank=True, related_name='text_sources', to='corpus.source'),
        ),
        migrations.AddField(
            model_name='text',
            name='text_sigle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='text_text_sigle', to='corpus.textsigle'),
        ),
        migrations.AddField(
            model_name='source',
            name='bib_entry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_bib_entry', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='section',
            name='container',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_container', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='section',
            name='meanings',
            field=models.ManyToManyField(related_name='section_meanings', to='dict.meaning'),
        ),
        migrations.AddField(
            model_name='section',
            name='previous',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='section',
            name='section_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_section_type', to='corpus.sectiontype'),
        ),
        migrations.AddField(
            model_name='section',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_source', to='corpus.source'),
        ),
        migrations.AddField(
            model_name='section',
            name='text',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_text', to='corpus.text'),
        ),
        migrations.AddField(
            model_name='section',
            name='tokens',
            field=models.ManyToManyField(related_name='section_tokens', to='corpus.token'),
        ),
        migrations.AddField(
            model_name='resource',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='resource_authors', to='corpus.author'),
        ),
        migrations.AddConstraint(
            model_name='morphologicalannotation',
            constraint=models.UniqueConstraint(fields=('feature', 'feature_value'), name='feature_featurevalue'),
        ),
        migrations.AddField(
            model_name='historicaltoken',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltoken',
            name='previous',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.token'),
        ),
        migrations.AddField(
            model_name='historicaltoken',
            name='text',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.text'),
        ),
        migrations.AddField(
            model_name='historicaltext',
            name='corpus',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.corpus'),
        ),
        migrations.AddField(
            model_name='historicaltext',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltext',
            name='text_sigle',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.textsigle'),
        ),
        migrations.AddField(
            model_name='historicalsource',
            name='bib_entry',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='historicalsource',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsectiontype',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='previous',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='section_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.sectiontype'),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='source',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.source'),
        ),
        migrations.AddField(
            model_name='historicalsection',
            name='text',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.text'),
        ),
        migrations.AddField(
            model_name='historicalmorphologicalannotation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfolio',
            name='facsimile',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.facsimile'),
        ),
        migrations.AddField(
            model_name='historicalfolio',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfolio',
            name='previous',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.folio'),
        ),
        migrations.AddField(
            model_name='historicalfacsimile',
            name='bib_entry',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='historicalfacsimile',
            name='codex_part',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.codexpart'),
        ),
        migrations.AddField(
            model_name='historicalfacsimile',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaledition',
            name='bib_entry',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='historicaledition',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldependency',
            name='head',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.token'),
        ),
        migrations.AddField(
            model_name='historicaldependency',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcorpus',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='codex_part',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.codexpart'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='dependency',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.dependency'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='facsimile',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.facsimile'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='folio',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.folio'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='lemma',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.lemma'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='meaning',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.meaning'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='resource',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.resource'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='section',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='section_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.sectiontype'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='semantic',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dict.semantic'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='text',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.text'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='text_sigle',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.textsigle'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='token',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.token'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcodexpart',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcodex',
            name='bib_entry',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='historicalcodex',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbibentry',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='folio',
            name='facsimile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='folio_facsimile', to='corpus.facsimile'),
        ),
        migrations.AddField(
            model_name='folio',
            name='previous',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='next', to='corpus.folio'),
        ),
        migrations.AddField(
            model_name='folio',
            name='sections',
            field=models.ManyToManyField(blank=True, related_name='folio_sections', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='facsimile',
            name='bib_entry',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facsimile_reference', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='facsimile',
            name='codex_part',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facsimile_codex_part', to='corpus.codexpart'),
        ),
        migrations.AddField(
            model_name='dependency',
            name='head',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependency_head', to='corpus.token'),
        ),
        migrations.AddConstraint(
            model_name='corpus',
            constraint=models.UniqueConstraint(fields=('name', 'slug'), name='corpus_name_slug'),
        ),
        migrations.AddField(
            model_name='comment',
            name='codex_part',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_codex_part', to='corpus.codexpart'),
        ),
        migrations.AddField(
            model_name='comment',
            name='dependency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_dependency', to='corpus.dependency'),
        ),
        migrations.AddField(
            model_name='comment',
            name='facsimile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_facsimile', to='corpus.facsimile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='folio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_folio', to='corpus.folio'),
        ),
        migrations.AddField(
            model_name='comment',
            name='lemma',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_lemma', to='dict.lemma'),
        ),
        migrations.AddField(
            model_name='comment',
            name='meaning',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_meaning', to='dict.meaning'),
        ),
        migrations.AddField(
            model_name='comment',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_resource', to='corpus.resource'),
        ),
        migrations.AddField(
            model_name='comment',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_section', to='corpus.section'),
        ),
        migrations.AddField(
            model_name='comment',
            name='section_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_section_type', to='corpus.sectiontype'),
        ),
        migrations.AddField(
            model_name='comment',
            name='semantic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dict.semantic'),
        ),
        migrations.AddField(
            model_name='comment',
            name='text',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_text', to='corpus.text'),
        ),
        migrations.AddField(
            model_name='comment',
            name='text_sigle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_text_sigle', to='corpus.textsigle'),
        ),
        migrations.AddField(
            model_name='comment',
            name='token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_token', to='corpus.token'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(fields=('name', 'last_name'), name='name_lastname'),
        ),
        migrations.AddConstraint(
            model_name='token',
            constraint=models.UniqueConstraint(fields=('number', 'text'), name='token_number_text'),
        ),
        migrations.AddConstraint(
            model_name='text',
            constraint=models.UniqueConstraint(fields=('corpus', 'title'), name='corpus_title'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='codex',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.codex'),
        ),
        migrations.AddField(
            model_name='historicalcomment',
            name='edition',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.edition'),
        ),
        migrations.AddField(
            model_name='historicalcodexpart',
            name='codex',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='corpus.codex'),
        ),
        migrations.AddConstraint(
            model_name='folio',
            constraint=models.UniqueConstraint(fields=('identifier', 'facsimile', 'number'), name='identifier_facsimile_number'),
        ),
        migrations.AddField(
            model_name='edition',
            name='references',
            field=models.ManyToManyField(blank=True, related_name='edition_references', to='corpus.bibentry'),
        ),
        migrations.AddField(
            model_name='edition',
            name='text_sigles',
            field=models.ManyToManyField(blank=True, related_name='edition_text_sigles', to='corpus.textsigle'),
        ),
        migrations.AddField(
            model_name='comment',
            name='codex',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_codex', to='corpus.codex'),
        ),
        migrations.AddField(
            model_name='comment',
            name='edition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_edition', to='corpus.edition'),
        ),
        migrations.AddField(
            model_name='codexpart',
            name='codex',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='codex_part_codex', to='corpus.codex'),
        ),
    ]
